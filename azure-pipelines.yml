trigger:
  branches:
    include:
    - '*'

stages:
- stage: test
  jobs:
  - job: ubuntu
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        Python311:
          python.version: '3.11'
        Python312:
          python.version: '3.12'
        Python313:
          python.version: '3.13'
        PyPy3:
          python.version: 'pypy3'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
        allowUnstable: true
    - template: .azure-pipelines/build-run-tests.yml

  - job: ubuntu_eastern_timezone
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        Python38:
          python.version: '3.11'
    steps:
    - bash: sudo timedatectl set-timezone America/New_York
      displayName: Set timezone
    - bash: date
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml

  - job: previous_orc_versions
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        ORC17:
          orc.version: '1.7.11'
        ORC18:
          orc.version: '1.8.8'
        ORC19:
          orc.version: '1.9.5'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml
      parameters:
        orc_version: '$(orc.version)'

  - job: macos
    pool:
      vmImage: 'macOS-latest'
    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        Python311:
          python.version: '3.11'
        Python312:
          python.version: '3.12'
        Python313:
          python.version: '3.13'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
        allowUnstable: true
    - template: .azure-pipelines/build-run-tests.yml

  - job: windows
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        Python311:
          python.version: '3.11'
        Python312:
          python.version: '3.12'
        Python313:
          python.version: '3.13'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
        allowUnstable: true
    - template: .azure-pipelines/build-run-tests.yml
      parameters:
        windows: true

- stage: build_wheels
  jobs:
  - job: manylinux_x86_64
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_BUILD_VERBOSITY: 3
              CIBW_ARCHS: x86_64
              CIBW_BUILD: "*-manylinux_*"
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: musllinux_x86_64
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_BUILD_VERBOSITY: 3
              CIBW_ARCHS: x86_64
              CIBW_BUILD: "*-musllinux_*"
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: manylinux_aarch64
    timeoutInMinutes: 165
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          qemu: true
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_BUILD_VERBOSITY: 3
              CIBW_ARCHS: aarch64
              CIBW_BUILD: "*-manylinux_*"
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: musllinux_aarch64
    timeoutInMinutes: 165
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          qemu: true
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_BUILD_VERBOSITY: 3
              CIBW_ARCHS: aarch64
              CIBW_BUILD: "*-musllinux_*"
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: macos
    pool:
      vmImage: 'macOS-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET=10.13"
              CIBW_BUILD_VERBOSITY: 3
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: macos_universal2
    pool:
      vmImage: 'macOS-latest'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET=10.13"
              CIBW_BUILD_VERBOSITY: 3
              CMAKE_OSX_ARCHITECTURES: 'x86_64;arm64'
              CIBW_ARCHS_MACOS: universal2
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels

  - job: windows_amd64
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: .azure-pipelines/prepare-and-push-wheels.yml
        parameters:
          cibwStep:
            bash: cibuildwheel --output-dir wheelhouse .
            env:
              CIBW_BUILD_VERBOSITY: 3
              CIBW_ARCHS: AMD64
              CIBW_SKIP: "cp36-* cp37-* cp38-*"
            displayName: Build wheels
